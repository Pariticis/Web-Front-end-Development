规则
1.全部采用小写字母以及连字符
2.要引用子目录中的文件，请在路径前面写上目录名，再加上一个正斜杠。例如：subdirectory/my-image.jpg

网站结构
1.index.html：这个文件一般会包含主页内容，也就是人们第一次进入网站时看到的文字和图片
2.images 文件夹：这个文件夹包含网站上使用的所有图片
3.styles 文件夹：这个文件夹包含用于设置内容样式的 CSS 代码（例如，设置文本和背景颜色）
4.scripts 文件夹：这个文件夹包含所有用于向网站添加交互功能的 JavaScript 代码（例如，点击时加载数据的按钮）

git推送代码
推送流程：
1.本地编写代码 提交至本地仓库(自命名分支)
2.本地仓库代码提交至远程仓库(默认为main分支)
一、终端推送方式：
1.首先，确保本地仓库有最新代码，然后切换到main分支
2.在终端中输入git add .  ，添加所有修改文件到暂存区
3.输入git commit -m "提交说明" ，提交修改到本地仓库
4.输入git push 本地仓库名 main ，推送本地仓库代码到远程仓库
二、vs插件推送方式：
1.首先，确保本地仓库有最新代码，然后切换到main分支
2.点击左侧源代码管理中的推送按钮，选择要推送的分支，消息栏中输入提交说明，点击提交
3.在源代码管理图可看到推送文件

源代码管理：
1.提交：
2.推送：
3.拉取：
4.合并：

vue + vite
1.确保node.js与nvm已安装
2.目标目录下终端运行npm i命令
3.用vite官网中的参考命令以npm安装vite + vue

router路由配置挂载
1.在src目录下创建router文件夹，并在其中创建index.js文件
2.在index.js文件中导入vue-router和各个路由对应的组件路径（.vue文件路径）
3.在index.js中创建配置路由数组routes，并配置路径与对应组件
4.在index.js中使用createRouter方法创建路由实例，并配置路由数据并在APP.vue的<template>标签中写入<router-view />
6.在main.js中导入router文件并用createApp方法创建Vue实例，挂载到Vue实例上

element-plus按需引入
1.npm install element-plus --save
2.npm install -D unplugin-vue-components unplugin-auto-import
3.在vite.config.js中配置unplugin-vue-components与unplugin-auto-import
4.重启vite服务